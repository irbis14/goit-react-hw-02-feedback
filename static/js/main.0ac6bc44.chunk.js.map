{"version":3,"sources":["Section/Section.js","FeedbackOptions/FeedbackOptions.js","Statistics/Statistics.js","App.js","index.js"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","option","id","shortid","generate","type","onClick","name","Statistics","good","neutral","bad","total","positivePercentage","App","state","e","target","setState","prevState","console","log","countTotalFeedback","countPositiveFeedbackPercentage","Math","floor","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qRAOeA,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,oCACE,6BAAKD,IACJC,M,gBCmBUC,EApBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,8BACGC,OAAOC,KAAKH,GAASI,KAAI,SAACC,GACzB,IAAMC,EAAKC,IAAQC,WACnB,OACE,wBAEEC,KAAK,SACLC,QAAST,EACTU,KAAMN,EAJR,SAMGA,GALIC,SCGFM,EAZI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,+BACE,wCAAWJ,KACX,2CAAcC,KACd,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,SCiDfC,G,kNAjDbC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPd,gBAAkB,SAACmB,GACjB,IAAQT,EAASS,EAAEC,OAAXV,KACR,EAAKW,UAAS,SAACC,GAAD,sBACXZ,EAAOY,EAAUZ,GAAQ,MAE5Ba,QAAQC,IAAI,oB,EAGdC,mBAAqB,WACnB,OAAO,EAAKP,MAAMN,KAAO,EAAKM,MAAML,QAAU,EAAKK,MAAMJ,K,EAG3DY,gCAAkC,WAChC,OACEC,KAAKC,MACF,EAAKV,MAAMN,MACT,EAAKM,MAAMN,KAAO,EAAKM,MAAML,QAAU,EAAKK,MAAMJ,KACnD,KACA,K,4CAIR,WACE,OACE,gCACE,cAAC,EAAD,CAASlB,MAAO,wBAAhB,SACE,cAAC,EAAD,CAAiBG,QAAS8B,KAAKX,UAEjC,cAAC,EAAD,CAAStB,MAAO,aAAhB,SACE,cAAC,EAAD,CACEgB,KAAMiB,KAAKX,MAAMN,KACjBC,QAASgB,KAAKX,MAAML,QACpBC,IAAKe,KAAKX,MAAMJ,IAChBC,MAAOc,KAAKJ,qBACZT,mBAAoBa,KAAKH,kCACzB1B,gBAAiB6B,KAAK7B,2B,GA1ChB8B,cCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.0ac6bc44.chunk.js","sourcesContent":["const Section = ({ title, children }) => (\r\n  <section>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nexport default Section;\r\n","import shortid from \"shortid\";\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return (\r\n    <div>\r\n      {Object.keys(options).map((option) => {\r\n        const id = shortid.generate();\r\n        return (\r\n          <button\r\n            key={id}\r\n            type=\"button\"\r\n            onClick={onLeaveFeedback}\r\n            name={option}\r\n          >\r\n            {option}\r\n          </button>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","const Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <ul>\r\n      <li>Good: {good}</li>\r\n      <li>Neutral: {neutral}</li>\r\n      <li>Bad: {bad}</li>\r\n      <li>Total: {total}</li>\r\n      <li>Positive feedback: {positivePercentage}</li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import { Component } from \"react\";\nimport Section from \"./Section\";\nimport FeedbackOptions from \"./FeedbackOptions\";\nimport Statistics from \"./Statistics\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  onLeaveFeedback = (e) => {\n    const { name } = e.target;\n    this.setState((prevState) => ({\n      [name]: prevState[name] + 1,\n    }));\n    console.log(\"onLeaveFeedback\");\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return (\n      Math.floor(\n        (this.state.good /\n          (this.state.good + this.state.neutral + this.state.bad)) *\n          100\n      ) + \"%\"\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <Section title={\"Please leave feedback\"}>\n          <FeedbackOptions options={this.state} />\n        </Section>\n        <Section title={\"Statistics\"}>\n          <Statistics\n            good={this.state.good}\n            neutral={this.state.neutral}\n            bad={this.state.bad}\n            total={this.countTotalFeedback()}\n            positivePercentage={this.countPositiveFeedbackPercentage()}\n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}